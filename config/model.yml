  model_selection:
    active_model: "DecisionTree"
    models:
      ElasticNet:
        alpha: [0.01, 0.1, 1.0]
        l1_ratio: [0.1, 0.5, 0.9]
        max_iter: [1000, 2000]

      KNeighborsRegressor:
        n_neighbors: [3, 5, 7, 10]
        weights: ['uniform', 'distance']
        algorithm: ['auto', 'kd_tree', 'brute']

      DecisionTree:
        max_depth: [5, 10, 20, None]
        min_samples_split: [2, 5, 10]
        min_samples_leaf: [1, 2, 4]

      RandomForest:
        n_estimators: [100, 200]
        max_depth: [10, 20, None]
        min_samples_split: [2, 5]
        min_samples_leaf: [1, 2]

      GradientBoosting:
        n_estimators: [100, 150]
        learning_rate: [0.05, 0.1]
        max_depth: [3, 5]
        subsample: [0.8, 1.0]

      XGBoost:
        n_estimators: [100, 200]
        learning_rate: [0.05, 0.1]
        max_depth: [3, 5, 7]
        subsample: [0.8, 1.0]

      AdaBoost:
        n_estimators: [50, 100, 150]
        learning_rate: [0.01, 0.1, 1.0]

      LinearRegression: {}